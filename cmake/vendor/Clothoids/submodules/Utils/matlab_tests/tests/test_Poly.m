
solver = Algo748();

TOL = 1.0e-10;

poly1 = Poly([ ...
    0.000000000000e+00, ...
    0.000000000000e+00, ...
    2.666161825654e-07, ...
    -6.427058688000e-03, ...
    4.675582268258e-02, ...
    -2.078560000000e-01, ...
    5.840143833845e-01, ...
    -1.000000000000e+00, ...
    8.133361326604e-01 ...
  ]);
L1 = 3.073759912550e-01;
a1 = TOL;
b1 = L1 - TOL;

root1 = solver.eval( ...
    a1, ...
    b1, ...
    @(x) poly1.eval(x) ...
  );
solver.num_iter_done()
solver.num_fun_eval()
root1

poly2 = Poly([ ...
  0.000000000000e+00, ...
  0.000000000000e+00, ...
  5.606777468323e-07, ...
  -7.205761152000e-03, ...
  5.094322098546e-02, ...
  -2.200880000000e-01, ...
  6.009529099688e-01, ...
  -1.000000000000e+00, ...
  7.904113485774e-01 ...
  ]);
L2 = 3.162910052468e-01;
a2 = TOL;
b2 = L2 - TOL;

root2 = solver.eval( ...
    a2, ...
    b2, ...
    @(x) poly2.eval(x) ...
  );
solver.num_iter_done()
solver.num_fun_eval()
root2


poly3 = Poly([ ...
  0.000000000000e+00, ...
  0.000000000000e+00, ...
  6.172716155246e-07, ...
  -7.315660800000e-03, ...
  5.152484265241e-02, ...
  -2.217600000000e-01 ...
  6.032312989227e-01, ...
  -1.000000000000e+00, ...
  7.874259854359e-01, ...
  ]);
L3 = 3.174901573278e-01;
a3 = TOL;
b3 = L3 - TOL;

root3 = solver.eval( ...
    a3, ...
    b3, ...
    @(x) poly3.eval(x) ...
  );
solver.num_iter_done()
solver.num_fun_eval()
root3
